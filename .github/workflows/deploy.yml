name: CI/CD - Go App with App Runner

on:
  push:
    branches: 
      - main
      - hotfix

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Rodar go fmt
        run: test -z "$(gofmt -l .)" || (echo "Código não formatado"; exit 1)

      - name: Rodar go vet
        run: go vet ./...

  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Check go.mod/go.sum
        run: |
          go mod tidy
          git diff --exit-code || (echo "go.mod or go.sum are unupdated"; exit 1)


  test:
    runs-on: ubuntu-latest
    needs: [lint, tidy]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Checking tests
        run: go test ./...

  coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.25

      - name: Checking coverage
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out
          go tool cover -func=coverage.out | grep total | awk '{ print $$3 }' > coverage.txt

      - name: Validation coverage
        run: |
          COV=$(cat coverage.txt | sed 's/%//')
          MIN=0
          echo "Current Coverage: $$COV%"
          if [ "$$COV" -lt "$$MIN"]; then
            echo "Coverage under minimum ($$MIN%)"
            exit 1
          fi
